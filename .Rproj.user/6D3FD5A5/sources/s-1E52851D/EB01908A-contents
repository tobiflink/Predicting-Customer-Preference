install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
library(caret)
library(mlbench)
data("Sonar")
set.seed(107)
inTrain<-createDataPartition(y=Sonar$Class,
                             p=.75,
                             list = FALSE)
str(inTrain)
training<-Sonar[inTrain,]
testing<-Sonar[-inTrain,]
nrow(training)
nrow(testing)
plsFit<-train(Class~.,
              data=training,
              method="pls",
              prePoc=c("center","scale"))
plsFit<-train(Class~.,
              data=training,
              method="pls",
              tunelength=15,
              prePoc=c("center","scale"))
ctrl<-trainControl(method="repeatedcv",
                   repeats = 3)
plsFit<-train(Class~.,
              data=training,
              method="pls",
              tunelength=15,
              trControl=ctrl,
              preProc=c("center","scale"))
ctrl<-trainControl(method="repeatedcv",
                   repeats = 3,
                   classProbs = TRUE,
                   summaryFunction = twoClassSummary)
plsFit<-train(Class~.,
              data=training,
              method="pls",
              tunelength=15,
              trControl=ctrl,
              metric="ROC",
              preProc=c("center","scale"))
plsFit
plsClasses <- predict(plsFit, newdata = testing)
str(plsClasses)
plsProbs <- predict(plsFit, newdata = testing, type = "prob")
head(plsProbs)
plot(plsFit)
confusionMatrix(data = plsClasses, testing$Class)


rdaGrid = data.frame(gamma = (0:4)/4, lambda = 3/4)
set.seed(123)
rdaFit <- train(Class ~ .,
                data = training,
                method = "rda",
                tuneGrid = rdaGrid,
                trControl = ctrl,
                metric = "ROC")
rdaFit
